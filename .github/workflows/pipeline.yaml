name: 'Pipeline'

on:
  push:
    branches: ['main']

  pull_request:
    types: [opened, synchronize]

  workflow_dispatch:
    inputs:
      release-type:
        description: 'Type of release (major, minor, patch, alpha)'
        required: true
        default: alpha
        type: choice
        options:
          - major
          - minor
          - patch
          - alpha

      package:
        description: 'Which package to release'
        required: true
        default: ssi
        type: choice
        options:
          - ssi
          - digilocker

jobs:
  continuous-integration:
    name: 'Continuous Integration'
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4

      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Check formatting
        run: pnpm style:check

      - name: Check types
        run: pnpm check-types

      - name: Test
        run: pnpm test

  continuous-deployment:
    if: github.event_name == 'workflow_dispatch'

    name: 'Continuous Deployment'
    runs-on: ubuntu-24.04
    needs: ['continuous-integration']

    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}
      - uses: pnpm/action-setup@v4

      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm build

      - name: Initialise the NPM config
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm config set //registry.npmjs.org/:_authToken $NPM_TOKEN

      - name: Publish
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        shell: bash
        run: |
          git config --global user.email "amit.padmani@ayanworks.com"
          git config --global user.name "Amit Padmani"

          if [ ${{ inputs.release-type }} == 'alpha' ]; then
            pnpm run --dir packages/${{ inputs.package }} release --preRelease=${{ inputs.release-type }} --npm.tag=alpha
          else
            pnpm run --dir packages/${{ inputs.package }} release ${{ inputs.release-type }} --npm.tag=latest
          fi
